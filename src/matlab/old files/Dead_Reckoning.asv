fs = 50;%Sampling Rate
t=1/fs;
%% INITIALIZATION
%N =100;
%N=size(acc,2);
orien = [1 0 0 0];
%offset= 0*[0.4028    0.3500    0];
position = [0 0 0]';
velocity = [0 0 0]';
%% INPUTS
% acc = randn(3,N);
%angular_rate = randn(3,N)*0.02;
acc=accxyz';
acc=acc(:,60:200);
N=size(acc,2);
angular_rate=gyroxyz'*0;
g = [0.3522    0.4495    9.9333]'- offset';
% becomes g = mean of the rest value - [ofx ofy ofz]';
%% Dead Reckoning
pos = position; v = velocity;
for i = 1:N
    wx = angular_rate(1,i)*t;wy = angular_rate(1,i)*t;wz = angular_rate(1,i)*t;
    orien = quatmultiply(orien,angle2quat(wx,wy,wz));
    a = quatrotate(quatinv(orien),(acc(:,i)-offset')')' - g;
    temp(i)=a(3);
    pos = pos + v *t + 0.5*a*t^2;
    v = v + a * t;
    position(:,i+1) = pos;
end
